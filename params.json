{"name":"Mssqlhelper","body":"# nodejs Microsoft SQL Server Helper \r\n# nodejs的一个用于连接mssql数据库的工具类\r\n\r\n## Features 介绍\r\n\r\n * 采用微软tds协议，不需要任何C/C++扩展，跨平台使用\r\n * 执行sql语句，获得结果行\r\n * 执行存储过程，获得输出参数以及结果行\r\n\r\n## TODO 待实现内容\r\n\r\n * 将支持获得多个结果集（Table）\r\n * 将支持连接池\r\n * 更多性能加强\r\n\r\n\r\n## Use 使用\r\n    \r\n    npm install mssqlhelper\r\n\r\n## Test 测试代码\r\n\r\n```javascript\r\nvar db = require('./index');\r\n\r\ndb.config({\r\n    host: '192.168.1.100'\r\n\t,port: 1433\r\n\t,userName: 'sa'\r\n\t,password: '123'\r\n\t,database:'testdb'\r\n});\r\n\r\n//test query sql 执行sql\r\n\r\ndb.query(\r\n\t'select @Param1 Param1,@Param2 Param2'\r\n\t,{\r\n\t\t Param1: { type : 'NVarChar', size: 7,value : 'myvalue' }\r\n\t\t ,Param2: { type : 'Int',value : 321 }\r\n\t}\r\n\t,function(res){\r\n\t\tif(res.err)throw new Error('database error:'+res.err.msg);\r\n\t\tvar rows = res.tables[0].rows;\r\n\t\tfor (var i = 0; i < rows.length; i++) {\r\n\t\t\tconsole.log(rows[i].getValue(0),rows[i].getValue('Param2'));\r\n\t\t}\r\n\t}\r\n);\r\n\r\n//test excute sp 执行存储过程\r\n\r\ndb.exec(\r\n\t'test_sp'\r\n\t,{\r\n\t\t Param1: {direction:'out', type : 'NVarChar', size: 50,value : 'my Param1 value' }\r\n\t\t ,Param2: { type : 'Int',value : 123 }\r\n\t\t ,Param3: {direction:'out', type : 'VarChar', size: 50,value : '789' }\r\n\t}\r\n\t,function(res){\r\n\t\tif(res.err)throw new Error('database error:'+res.err.msg);\r\n\r\n\t\t//get output paramater value\r\n\t\tconsole.log('output @Param1='+res.params.Param1.value);\r\n\r\n\t\t//get rows\r\n\t\tvar rows = res.tables[0].rows;\r\n\t\tfor (var i = 0; i < rows.length; i++) {\r\n\t\t\tvar rp = '';\r\n\t\t\tfor(var j=0,len = rows[i].metadata.columns.length;j<len;j++){\r\n\t\t\t\tvar col = rows[i].metadata.columns[j];\r\n\t\t\t\trp += ' ' +(rows[i].getValue(j));\r\n\t\t\t}\r\n\t\t\tconsole.log(rp);\r\n\t\t}\r\n\t}\r\n);\r\n\r\n```\r\n\r\n///////////////////////////////问题和解决方案//////////////////////////////////////\r\n\r\n问题/Issues：\r\n\r\n1：不能输出匿名列，比如select *\r\n\r\n2：如果不能排序，比如 select a from table oerder by b desc，目前的解决方法：\r\n\t;with result as(\r\n\t\tSELECT Actor,ActorName FROM [GameActor] order by time desc\r\n\t)\r\n\tselect * from result\r\n\r\n3：输出中文乱码，引发这个问题有几个方面，解决方法：\r\n\r\n\t（1）把所有js文件用utf-8编码保存\r\n\t（2）数据库中含有中文的字段，必须是unicode类型，比如varchar应该改为nvarchar:cast(column1 as nvarchar(50))\r\n\r\n4:在多进程cluster的的使用：\r\n\r\n```javascript\r\n\tvar db = require('./index');\t\r\n\tvar cluster = require('cluster');\t\r\n\tif (cluster.isMaster) {\r\n\t    var numCPUs = require('os').cpus().length;\r\n\t    for (var i = 0; i < numCPUs; i++) {\r\n\t        var worker = cluster.fork();\r\n\t    }\r\n\t} else {\r\n\t    db.config(..);\r\n\t    db.query(..);\r\n\t}\r\n\r\n```","tagline":"nodejs Microsoft SQL Server Helper nodejs的一个用于连接mssql数据库的工具类","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}